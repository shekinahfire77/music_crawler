# Render Blueprint Configuration
# Production deployment for music web crawler

services:
  # Main background worker for crawling
  - type: worker
    name: music-crawler
    env: python
    plan: starter  # 0.5 CPU, 512MB RAM
    buildCommand: pip install --upgrade pip && pip install -r requirements.txt
    startCommand: python app.py
    envVars:
      - key: PYTHON_VERSION
        value: 3.9.18
      - key: MAX_MEMORY_MB
        value: 450
      - key: MAX_CPU_PERCENT
        value: 60
      - key: INITIAL_CONCURRENCY
        value: 10
      - key: MAX_CONCURRENCY
        value: 15
      - key: LOG_LEVEL
        value: INFO
      - key: OUTPUT_DIR
        value: /tmp/output
      - key: MAX_PAGES
        value: 10000
      - key: USER_AGENT
        value: "MusicCrawler/1.0 (+https://github.com/musiccrawler)"
      # These will be set manually in Render dashboard:
      # - REDIS_URL (from Redis service)
      # - DATABASE_URL (from PostgreSQL service)

  # Redis for frontier queue and caching
  - type: redis
    name: crawler-redis
    plan: starter  # 25MB RAM
    maxmemoryPolicy: allkeys-lru

  # PostgreSQL for results storage
  - type: pserv
    name: crawler-database
    plan: starter  # 256MB RAM, 1GB storage
    databaseName: crawler
    databaseUser: crawler_user

# Optional: Web service for monitoring/health checks
# Uncomment if you want a web interface
# - type: web
#   name: crawler-monitor
#   env: python
#   plan: starter
#   buildCommand: pip install flask gunicorn
#   startCommand: gunicorn health_check:app
#   envVars:
#     - key: PORT
#       value: 10000